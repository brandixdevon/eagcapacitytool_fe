{"version":3,"sources":["features/counter/counterAPI.js","features/counter/counterSlice.js","app/store.js","serviceWorker.js","components/Auth/logo.svg","components/Auth/login.js","components/layout/siderview.js","components/layout/headerview.js","components/layout/footerview.js","components/layout/dash.js","components/projects/newproject.js","components/projects/projectslist.js","components/projects/editproject.js","components/projects/projectview1.js","components/employee/newemployee.js","components/employee/employeelist.js","components/employee/editemployee.js","components/calendar/calendaradd.js","components/calendar/calendarfullview.js","components/tasks/dailytasks.js","index.js"],"names":["fetchCount","amount","Promise","resolve","setTimeout","data","incrementAsync","createAsyncThunk","a","response","counterSlice","createSlice","name","initialState","value","status","reducers","increment","state","decrement","incrementByAmount","action","payload","extraReducers","builder","addCase","pending","fulfilled","actions","store","configureStore","reducer","counter","counterReducer","Boolean","window","location","hostname","match","App","localStorage","setItem","apiurl","getItem","React","useState","VALUE_USERNAME","setVALUE_USERNAME","VALUE_PASSWORD","setVALUE_PASSWORD","redirect","setRedirect","className","to","clear","title","bordered","style","width","backgroundColor","padding","src","logo","alt","labelCol","span","wrapperCol","initialValues","remember","autoComplete","Item","label","rules","required","message","onChange","e","target","placeholder","Password","offset","onClick","sendOptions","method","headers","body","JSON","stringify","fetch","then","json","Type","u_id","emp_id","u_name","u_type","notification","description","Msg","color","border","catch","error","handleClick","type","htmlType","Siderview","Sider","Layout","SubMenu","Menu","collapsed","setcollapsed","collapsible","onCollapse","size","icon","UserOutlined","marginTop","theme","defaultSelectedKeys","mode","PieChartOutlined","DesktopOutlined","CalendarOutlined","TeamOutlined","ProjectOutlined","CheckOutlined","Index","Header","Title","level","FooterView","Footer","textAlign","Date","getFullYear","Content","minHeight","margin","borderRadius","proname","setproname","datestart","setdatestart","dateend","setdateend","Text","date","dateString","ds_projects","setds_projects","tablecolumns","dataIndex","key","render","val","shape","EditOutlined","borderColor","DiffOutlined","sorter","b","pro_name","localeCompare","sortDirections","ConvertToDate","filters","text","onFilter","record","pro_status","indexOf","format","useEffect","res","Dataset","dataSource","columns","Option","Select","href","split","reverse","url_proid","dateFormat","moment","prostatus","setprostatus","String","pro_start","pro_end","url_userid","thisyear","Dataforview","setDataforview","unix","count","defaultValue","startDate","endDate","height","rectSize","legendCellSize","panelColors","weekLabels","rectProps","rx","rectRender","props","placement","content","empad","setempad","empname","setempname","emphours","setempwhours","empwhours","ds_employee","setds_employee","borderBlockColor","DotChartOutlined","emp_ad","emp_name","emp_whours","url_empid","empactive","setempactive","emp_active","checked","caldate","setcaldate","caldatetype","setcaldatetype","ds_dates","setds_dates","ActionButtonStrip","cal_date","cal_datetype","pagination","defaultPageSize","showSizeChanger","pageSizeOptions","dsEventsList","EventList","setEventList","Dataload","setDataload","length","i","push","display","textColor","plugins","dayGridPlugin","initialView","weekends","firstDay","events","weekNumbers","headerToolbar","start","center","end","eventTextColor","ReactExport","ExcelFile","ExcelSheet","ExcelColumn","setds_alltasks","ReactDOM","StrictMode","exact","path","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c1b1e882.chunk.js","sourcesContent":["// A mock function to mimic making an async request for data\nexport function fetchCount(amount = 1) {\n  return new Promise((resolve) =>\n    setTimeout(() => resolve({ data: amount }), 500)\n  );\n}\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { fetchCount } from './counterAPI';\n\nconst initialState = {\n  value: 0,\n  status: 'idle',\n};\n\n// The function below is called a thunk and allows us to perform async logic. It\n// can be dispatched like a regular action: `dispatch(incrementAsync(10))`. This\n// will call the thunk with the `dispatch` function as the first argument. Async\n// code can then be executed and other actions can be dispatched. Thunks are\n// typically used to make async requests.\nexport const incrementAsync = createAsyncThunk(\n  'counter/fetchCount',\n  async (amount) => {\n    const response = await fetchCount(amount);\n    // The value we return becomes the `fulfilled` action payload\n    return response.data;\n  }\n);\n\nexport const counterSlice = createSlice({\n  name: 'counter',\n  initialState,\n  // The `reducers` field lets us define reducers and generate associated actions\n  reducers: {\n    increment: (state) => {\n      // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\n      // doesn't actually mutate the state because it uses the Immer library,\n      // which detects changes to a \"draft state\" and produces a brand new\n      // immutable state based off those changes\n      state.value += 1;\n    },\n    decrement: (state) => {\n      state.value -= 1;\n    },\n    // Use the PayloadAction type to declare the contents of `action.payload`\n    incrementByAmount: (state, action) => {\n      state.value += action.payload;\n    },\n  },\n  // The `extraReducers` field lets the slice handle actions defined elsewhere,\n  // including actions generated by createAsyncThunk or in other slices.\n  extraReducers: (builder) => {\n    builder\n      .addCase(incrementAsync.pending, (state) => {\n        state.status = 'loading';\n      })\n      .addCase(incrementAsync.fulfilled, (state, action) => {\n        state.status = 'idle';\n        state.value += action.payload;\n      });\n  },\n});\n\nexport const { increment, decrement, incrementByAmount } = counterSlice.actions;\n\n// The function below is called a selector and allows us to select a value from\n// the state. Selectors can also be defined inline where they're used instead of\n// in the slice file. For example: `useSelector((state: RootState) => state.counter.value)`\nexport const selectCount = (state) => state.counter.value;\n\n// We can also write thunks by hand, which may contain both sync and async logic.\n// Here's an example of conditionally dispatching actions based on current state.\nexport const incrementIfOdd = (amount) => (dispatch, getState) => {\n  const currentValue = selectCount(getState());\n  if (currentValue % 2 === 1) {\n    dispatch(incrementByAmount(amount));\n  }\n};\n\nexport default counterSlice.reducer;\n","import { configureStore } from '@reduxjs/toolkit';\nimport counterReducer from '../features/counter/counterSlice';\n\nexport const store = configureStore({\n  reducer: {\n    counter: counterReducer,\n  },\n});\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","export default __webpack_public_path__ + \"static/media/logo.b2e5a01e.svg\";","import React from 'react';\r\nimport logo from './logo.svg';\r\nimport '../../App.css';\r\nimport 'antd/dist/antd.css';\r\nimport { Form, Input, Button, notification, Card  } from 'antd';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nfunction App() {\r\n\r\n  localStorage.setItem('session_api','http://bia-winsrv-tst1:7080');\r\n  //localStorage.setItem('session_api','http://localhost:3890');\r\n  var apiurl = localStorage.getItem('session_api');\r\n\r\n  const [VALUE_USERNAME, setVALUE_USERNAME] = React.useState([]);\r\n  const [VALUE_PASSWORD, setVALUE_PASSWORD] = React.useState([]);\r\n  const [redirect, setRedirect] = React.useState(false);\r\n\r\n  const OnChange_username = (e) => {\r\n    setVALUE_USERNAME(e.target.value);\r\n  };\r\n\r\n  const OnChange_password = (e) => {\r\n    setVALUE_PASSWORD(e.target.value);\r\n  };\r\n\r\n  const handleClick = () => {\r\n\r\n    if(VALUE_USERNAME !== \"\" || VALUE_PASSWORD !== \"\")\r\n    {\r\n      const sendOptions = {\r\n        method: 'post',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({\"username\" : VALUE_USERNAME , \"password\" : VALUE_PASSWORD})\r\n      };\r\n  \r\n        fetch(`${apiurl}/login/checkuser`,sendOptions)\r\n        .then(response => response.json())\r\n        .then(data => \r\n        {\r\n            if(data.Type === \"SUCCESS\")\r\n            {\r\n              localStorage.setItem('session_sys_uid',data.u_id);\r\n              localStorage.setItem('session_sys_empid',data.emp_id);\r\n              localStorage.setItem('session_sys_uname',data.u_name);\r\n              localStorage.setItem('session_sys_utype',data.u_type);\r\n              setRedirect(true);\r\n            }\r\n  \r\n            if(data.Type === \"ERROR\")\r\n            {\r\n                localStorage.clear();\r\n                notification['error']({\r\n                  message: 'Notification Title',\r\n                  description:data.Msg,\r\n                  style:{color: '#fff',border: '1px solid #ffa39e',backgroundColor: '#ff6961'},\r\n                });\r\n            }\r\n  \r\n        })\r\n        .catch(error => \r\n          {\r\n            notification['error']({\r\n              message: 'Notification Title',\r\n              description:error,\r\n              style:{color: '#fff',border: '1px solid #ffa39e',backgroundColor: '#ff6961'},\r\n            });\r\n          });\r\n    }\r\n    else\r\n    {\r\n      notification['error']({\r\n        message: 'Notification Title',\r\n        description: 'Invalid Username or Password, Please Use Brandix User Account.',\r\n        style:{color: '#fff',border: '1px solid #ffa39e',backgroundColor: '#ff6961'},\r\n      });\r\n    }\r\n\r\n    \r\n\r\n  };\r\n\r\n  const renderRedirect = () => {\r\n    if (redirect) \r\n    {\r\n      return <Redirect to={\"/dashboard\"} />\r\n    }\r\n    else\r\n    {\r\n      localStorage.clear();\r\n      return <Redirect to={\"/login\"} />\r\n    }\r\n\r\n}\r\n\r\n\r\n  return (\r\n    <div className=\"App\">\r\n    {renderRedirect()}\r\n      <header className=\"App-header\">\r\n      <Card title=\"EAG CAPACITY PLANNING TOOL\" bordered={false} style={{ width: 500,backgroundColor:\"#e0ebff\", padding:\"20px\" }}>\r\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n        <br/>\r\n        <br/>\r\n<Form\r\n      name=\"basic\"\r\n      labelCol={{ span: 8 }}\r\n      wrapperCol={{ span: 16 }}\r\n      initialValues={{ remember: true }}\r\n      autoComplete=\"off\"\r\n    >\r\n      <Form.Item\r\n        label=\"Username\"\r\n        name=\"username\"\r\n        rules={[{ required: true, message: 'Please input your username!' }]}\r\n        onChange={OnChange_username}\r\n      >\r\n        <Input placeholder = \"Ex : devonp\"/>\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        label=\"Password\"\r\n        name=\"password\"\r\n        rules={[{ required: true, message: 'Please input your password!' }]}\r\n        onChange={OnChange_password}\r\n      >\r\n        <Input.Password />\r\n      </Form.Item>\r\n\r\n      <Form.Item wrapperCol={{ offset: 8, span: 16 }}>\r\n        <Button  onClick={() => handleClick()} type=\"primary\" style={{width: 200}} htmlType=\"submit\">\r\n          Sign In\r\n        </Button>\r\n      </Form.Item>\r\n    </Form>\r\n        \r\n    </Card>\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;","import React from \"react\";\r\nimport \"antd/dist/antd.css\";\r\nimport \"../index.css\";\r\nimport { Layout, Menu, Avatar } from \"antd\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"antd/dist/antd.css\";\r\nimport {\r\n  DesktopOutlined,\r\n  ProjectOutlined,\r\n  PieChartOutlined,\r\n  CheckOutlined,\r\n  TeamOutlined,\r\n  UserOutlined,\r\n  CalendarOutlined,\r\n} from \"@ant-design/icons\";\r\n\r\nfunction Siderview() {\r\n  const { Sider } = Layout;\r\n  const { SubMenu } = Menu;\r\n  const [collapsed, setcollapsed] = React.useState(false);\r\n\r\n  const onCollapse = () => {\r\n    if (collapsed === true) {\r\n      setcollapsed(false);\r\n    } else {\r\n      setcollapsed(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Sider\r\n      collapsible\r\n      collapsed={collapsed}\r\n      onCollapse={onCollapse}\r\n      style={{ backgroundColor: \"#fff\" }}\r\n    >\r\n      <div className=\"logo\" style={{ backgroundColor: \"#6532a8\" }}>\r\n        <center>\r\n          <Avatar\r\n            size={80}\r\n            icon={<UserOutlined />}\r\n            style={{ backgroundColor: \"#ba9de0\", marginTop: \"7px\" }}\r\n          />\r\n        </center>\r\n      </div>\r\n      <Menu theme=\"light\" defaultSelectedKeys={[\"1\"]} mode=\"inline\">\r\n        <Menu.Item key=\"1\" icon={<PieChartOutlined />}>\r\n          <Link to=\"/dashboard\">Dashboard</Link>\r\n        </Menu.Item>\r\n        <Menu.Item key=\"2\" icon={<DesktopOutlined />}>\r\n          Capacity View\r\n        </Menu.Item>\r\n        <SubMenu key=\"3\" icon={<CalendarOutlined />} title=\"Calendar\">\r\n          <Menu.Item key=\"31\">\r\n            <Link to=\"/addcalendar\">Add/Change Dates</Link>\r\n          </Menu.Item>\r\n          <Menu.Item key=\"32\">\r\n            <Link to=\"/calendarfullview\">Full View</Link>\r\n          </Menu.Item>\r\n        </SubMenu>\r\n        <SubMenu key=\"4\" icon={<TeamOutlined />} title=\"Employees\">\r\n          <Menu.Item key=\"41\">\r\n            <Link to=\"/newemployee\">Add New</Link>\r\n          </Menu.Item>\r\n          <Menu.Item key=\"42\">\r\n            {\" \"}\r\n            <Link to=\"/allemployee\">View List</Link>\r\n          </Menu.Item>\r\n        </SubMenu>\r\n        <SubMenu key=\"5\" icon={<ProjectOutlined />} title=\"Projects\">\r\n          <Menu.Item key=\"51\">\r\n            <Link to=\"/newproject\">Add New</Link>\r\n          </Menu.Item>\r\n          <Menu.Item key=\"52\">\r\n            <Link to=\"/allprojects\">View List</Link>\r\n          </Menu.Item>\r\n        </SubMenu>\r\n        <SubMenu key=\"6\" icon={<CheckOutlined />} title=\"Tasks\">\r\n          <Menu.Item key=\"61\">\r\n            <Link to=\"/dailytasks\">Daily Task</Link>\r\n          </Menu.Item>\r\n        </SubMenu>\r\n        <Menu.Item key=\"7\" icon={<UserOutlined />}>\r\n          <Link to=\"/login\">Sign Out</Link>\r\n        </Menu.Item>\r\n      </Menu>\r\n    </Sider>\r\n  );\r\n}\r\n\r\nexport default Siderview;\r\n","import React from 'react';\r\nimport 'antd/dist/antd.css';\r\nimport '../index.css';\r\nimport { Layout, Typography} from 'antd';\r\nimport 'antd/dist/antd.css';\r\n\r\nfunction Index() \r\n{\r\n    const { Header} = Layout;\r\n    \r\n    return( <Header className=\"site-layout-background\" style={{ padding: 10 }}><Typography.Title level={4} style={{color:\"#6532a8\"}}>BFF - EAG CAPACITY PLANNING TOOL</Typography.Title></Header>);\r\n}\r\n\r\nexport default Index;\r\n\r\n","import React from 'react';\r\nimport 'antd/dist/antd.css';\r\nimport '../index.css';\r\nimport { Layout} from 'antd';\r\nimport 'antd/dist/antd.css';\r\n\r\nfunction FooterView() \r\n{\r\n    const { Footer } = Layout;\r\n\r\n    return(<Footer style={{ textAlign: 'center' }}>©<>{new Date().getFullYear()}</> Solution by BFF EAG Team</Footer>);\r\n}\r\n\r\nexport default FooterView;\r\n\r\n","import React from 'react';\r\nimport 'antd/dist/antd.css';\r\nimport '../index.css';\r\nimport { Layout, Breadcrumb, Typography, Row, Col  } from 'antd';\r\nimport 'antd/dist/antd.css';\r\nimport SIDERVIEW from '../layout/siderview';\r\nimport HEADERVIEW from '../layout/headerview';\r\nimport FOOTERVIEW from '../layout/footerview';\r\n\r\nfunction Index() \r\n{\r\n    const {Content} = Layout;\r\n    \r\n    return( <Layout style={{ minHeight: '100vh' }}>\r\n    <SIDERVIEW />\r\n    <Layout className=\"site-layout\">\r\n      <HEADERVIEW />\r\n      <Content style={{ margin: '0 16px'}}>\r\n        <Breadcrumb style={{ margin: '16px 0' }}>\r\n          <Breadcrumb.Item>User</Breadcrumb.Item>\r\n          <Breadcrumb.Item>Dashboard</Breadcrumb.Item>\r\n        </Breadcrumb>\r\n        <div className=\"site-layout-background\" style={{ padding: 24, minHeight: 360 }}>\r\n          <Row>\r\n            <Col span={12}>col-12</Col>\r\n            <Col span={12} style={{padding:\"5px\",backgroundColor:\"#f6f0fc\",borderRadius:\"3px\"}}><Typography.Title level={5} style={{color:\"#4a0099\"}}>TODAY - TODO List</Typography.Title></Col>\r\n          </Row>\r\n        </div>\r\n      </Content>\r\n      <FOOTERVIEW/>\r\n    </Layout>\r\n  </Layout>);\r\n}\r\n\r\nexport default Index;\r\n\r\n","import React from 'react';\r\nimport 'antd/dist/antd.css';\r\nimport '../index.css';\r\nimport { Layout, Breadcrumb, Typography, Input, Row, Col, DatePicker, notification, Button  } from 'antd';\r\nimport { Link } from \"react-router-dom\";\r\nimport 'antd/dist/antd.css';\r\nimport SIDERVIEW from '../layout/siderview';\r\nimport HEADERVIEW from '../layout/headerview';\r\nimport FOOTERVIEW from '../layout/footerview';\r\n\r\nfunction Index() \r\n{\r\n    const {Content} = Layout;\r\n  \r\n    var apiurl = localStorage.getItem('session_api');\r\n\r\n    const [proname , setproname] = React.useState(\"\");\r\n    const [datestart , setdatestart] = React.useState(\"\");\r\n    const [dateend , setdateend] = React.useState(\"\");\r\n \r\n    function onChangeText(e) {\r\n        setproname(e.target.value);\r\n      }\r\n\r\n    function onChangeStart(date, dateString) {\r\n        setdatestart(dateString);\r\n      }\r\n\r\n    function onChangeEnd(date, dateString) {\r\n        setdateend(dateString);\r\n      }\r\n\r\n      function addProject()\r\n      {\r\n          if(proname === \"\")\r\n          {\r\n              notification['error']({\r\n                  message: 'Data Error',\r\n                  description:'Please Enter Project Name.',\r\n                  style:{color: '#000',border: '1px solid #ffa39e',backgroundColor: '#ff6961'},\r\n                });\r\n          }\r\n          else if(datestart === \"\")\r\n          {\r\n              notification['error']({\r\n                  message: 'Data Error',\r\n                  description:'Please Select Project Start Date.',\r\n                  style:{color: '#000',border: '1px solid #ffa39e',backgroundColor: '#ff6961'},\r\n                });\r\n          }\r\n          else if(dateend === \"\")\r\n          {\r\n              notification['error']({\r\n                  message: 'Data Error',\r\n                  description:'Please Select Project End Date.',\r\n                  style:{color: '#000',border: '1px solid #ffa39e',backgroundColor: '#ff6961'},\r\n                });\r\n          }\r\n          else\r\n          {\r\n            const sendOptions = {\r\n                method: 'post',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({\"proname\" : proname , \"prostart\" : datestart, \"proend\" : dateend, \"prostatus\" : \"Ongoing\"})\r\n              };\r\n\r\n              fetch(`${apiurl}/projects/addprojects`,sendOptions)\r\n                .then(response => response.json())\r\n                .then(data => \r\n                {\r\n                    if(data.Type === \"SUCCESS\")\r\n                    {\r\n                        setproname(\"\");\r\n                        setdatestart(\"\");\r\n                        setdateend(\"\");\r\n\r\n                        notification['success']({\r\n                            message: 'Data Success',\r\n                            description: data.Msg,\r\n                            style:{color: '#000',border: '1px solid #ccffcc',backgroundColor: '#99ff66'},\r\n                          });\r\n                    \r\n                    }\r\n        \r\n                    if(data.Type === \"ERROR\")\r\n                    {\r\n                        localStorage.clear();\r\n                        notification['error']({\r\n                            message: 'Data Error',\r\n                            description: data.Msg,\r\n                            style:{color: '#000',border: '1px solid #ffa39e',backgroundColor: '#ff6961'},\r\n                          });\r\n                    }\r\n        \r\n                })\r\n                .catch(error => {\r\n                    notification['error']({\r\n                        message: 'Data Error',\r\n                        description: error,\r\n                        style:{color: '#000',border: '1px solid #ffa39e',backgroundColor: '#ff6961'},\r\n                      });\r\n                });\r\n          }\r\n      }\r\n \r\n    return( <Layout style={{ minHeight: '100vh' }}>\r\n    <SIDERVIEW />\r\n    <Layout className=\"site-layout\">\r\n      <HEADERVIEW />\r\n      <Content style={{ margin: '0 16px'}}>\r\n        <Breadcrumb style={{ margin: '16px 0' }}>\r\n          <Breadcrumb.Item><Link to=\"/allprojects\">Projects</Link></Breadcrumb.Item>\r\n          <Breadcrumb.Item>New Projects</Breadcrumb.Item>\r\n        </Breadcrumb>\r\n        <div className=\"site-layout-background\" style={{ padding: 24, minHeight: 360 }}>\r\n          <Row>\r\n            <Col span={12}>\r\n                <Typography.Title level={5} style={{color:\"#6532a8\"}}>ADD NEW PROJECT</Typography.Title>\r\n                <br />\r\n                <Typography.Text style={{color:\"blue\"}}>Project Name :</Typography.Text>\r\n                <br />\r\n                <Input required={true} size=\"medium\" value={proname} onChange={onChangeText}/>\r\n                <br /><br />\r\n                <Typography.Text style={{color:\"blue\"}}>Project Start Date :</Typography.Text>\r\n                <br />\r\n                <DatePicker onChange={onChangeStart} size=\"large\"/>\r\n                <br /><br />\r\n                <Typography.Text style={{color:\"blue\"}}>Project End Date :</Typography.Text>\r\n                <br />\r\n                <DatePicker onChange={onChangeEnd} size=\"large\" />\r\n                <br/>\r\n                <br/>\r\n                <Button  onClick={addProject} type=\"primary\" htmlType=\"submit\" size=\"large\">\r\n                    Add New Project\r\n                </Button>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n      </Content>\r\n      <FOOTERVIEW/>\r\n    </Layout>\r\n  </Layout>);\r\n}\r\n\r\nexport default Index;\r\n\r\n","import React from \"react\";\r\nimport \"antd/dist/antd.css\";\r\nimport \"../index.css\";\r\nimport {\r\n  Layout,\r\n  Breadcrumb,\r\n  Typography,\r\n  Row,\r\n  Col,\r\n  notification,\r\n  Button,\r\n  Tooltip,\r\n  Table,\r\n  Tag,\r\n} from \"antd\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"antd/dist/antd.css\";\r\nimport Moment from \"react-moment\";\r\nimport { EditOutlined,DiffOutlined } from \"@ant-design/icons\";\r\nimport SIDERVIEW from \"../layout/siderview\";\r\nimport HEADERVIEW from \"../layout/headerview\";\r\nimport FOOTERVIEW from \"../layout/footerview\";\r\n\r\nfunction Index() {\r\n  const { Content } = Layout;\r\n  \r\n  var apiurl = localStorage.getItem(\"session_api\");\r\n\r\n  const [ds_projects, setds_projects] = React.useState([]);\r\n\r\n  const tablecolumns = [\r\n    {\r\n      title: \"Action\",\r\n      dataIndex: \"pro_id\",\r\n      key: \"pro_id\",\r\n      render: (val) => ActionButtonStrip(val),\r\n    },\r\n    {\r\n      title: \"Project Name\",\r\n      dataIndex: \"pro_name\",\r\n      key: \"pro_name\",\r\n      sorter: (a, b) => a.pro_name.localeCompare(b.pro_name),\r\n      sortDirections: [\"ascend\"],\r\n    },\r\n    {\r\n      title: \"Project Start\",\r\n      dataIndex: \"pro_start\",\r\n      key: \"pro_start\",\r\n      render: (val) => ConvertToDate(val),\r\n    },\r\n    {\r\n      title: \"Project End\",\r\n      dataIndex: \"pro_end\",\r\n      key: \"pro_end\",\r\n      render: (val) => ConvertToDate(val),\r\n    },\r\n    {\r\n      title: \"Project Status\",\r\n      dataIndex: \"pro_status\",\r\n      key: \"pro_status\",\r\n      filters: [\r\n        {\r\n          text: \"Ongoing\",\r\n          value: \"Ongoing\",\r\n        },\r\n        {\r\n          text: \"Onhold\",\r\n          value: \"Onhold\",\r\n        },\r\n        {\r\n          text: \"Finished\",\r\n          value: \"Finished\",\r\n        },\r\n        {\r\n          text: \"Cancelled\",\r\n          value: \"Cancelled\",\r\n        },\r\n      ],\r\n      onFilter: (value, record) => record.pro_status.indexOf(value) === 0,\r\n    },\r\n    {\r\n      title: \"Project Active\",\r\n      dataIndex: \"pro_active\",\r\n      key: \"pro_active\",\r\n      render: (val) => YesNo(val),\r\n    },\r\n  ];\r\n\r\n  function YesNo(value) {\r\n    if (value === true) {\r\n      return (\r\n        <Tag color={\"green\"} key={\"Active\"}>\r\n          Active\r\n        </Tag>\r\n      );\r\n    } else {\r\n      return (\r\n        <Tag color={\"red\"} key={\"Disable\"}>\r\n          Disable\r\n        </Tag>\r\n      );\r\n    }\r\n  }\r\n\r\n  function ConvertToDate(value) {\r\n    return <Moment format=\"YYYY-MMM-DD\">{value}</Moment>;\r\n  }\r\n  function ActionButtonStrip(value) {\r\n    return (\r\n      <>\r\n      <Tooltip title=\"Edit\">\r\n        <Link to={\"/editproject/\" + value}>\r\n          <Button shape=\"circle\" type=\"primary\" icon={<EditOutlined />} />\r\n        </Link>\r\n      </Tooltip>\r\n      <Tooltip title=\"Tasks Assign\">\r\n        <Link to={\"/addtask/\" + value}>\r\n          <Button shape=\"circle\" style={{backgroundColor:\"orange\",borderColor:\"orange\",color:\"black\"}} icon={<DiffOutlined />} />\r\n        </Link>\r\n      </Tooltip>\r\n      </>\r\n    );\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    fetch(`${apiurl}/projects/allprojects`)\r\n      .then((res) => res.json())\r\n      .then((response) => {\r\n        if (response.Type === \"SUCCESS\") {\r\n          setds_projects(response.Dataset);\r\n\r\n          notification[\"success\"]({\r\n            message: \"Data Success\",\r\n            description: \"Data Loaded Successfully.\",\r\n            style: {\r\n              color: \"#000\",\r\n              border: \"1px solid #ccffcc\",\r\n              backgroundColor: \"#99ff66\",\r\n            },\r\n          });\r\n        } else {\r\n          notification[\"error\"]({\r\n            message: \"Data Error\",\r\n            description: \"Data Loading Error.\",\r\n            style: {\r\n              color: \"#000\",\r\n              border: \"1px solid #ffa39e\",\r\n              backgroundColor: \"#ff6961\",\r\n            },\r\n          });\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        notification[\"error\"]({\r\n          message: \"Data Error\",\r\n          description: error,\r\n          style: {\r\n            color: \"#000\",\r\n            border: \"1px solid #ffa39e\",\r\n            backgroundColor: \"#ff6961\",\r\n          },\r\n        });\r\n      });\r\n  }, [apiurl]);\r\n\r\n  return (\r\n    <Layout style={{ minHeight: \"100vh\" }}>\r\n      <SIDERVIEW />\r\n      <Layout className=\"site-layout\">\r\n        <HEADERVIEW />\r\n        <Content style={{ margin: \"0 16px\" }}>\r\n          <Breadcrumb style={{ margin: \"16px 0\" }}>\r\n            <Breadcrumb.Item>\r\n              <Link to=\"/allprojects\">Projects</Link>\r\n            </Breadcrumb.Item>\r\n            <Breadcrumb.Item>All Projects</Breadcrumb.Item>\r\n          </Breadcrumb>\r\n          <div\r\n            className=\"site-layout-background\"\r\n            style={{ padding: 24, minHeight: 360 }}\r\n          >\r\n            <Row>\r\n              <Col span={24}>\r\n                <Typography.Title level={5} style={{ color: \"#6532a8\" }}>\r\n                  ALL PROJECT\r\n                </Typography.Title>\r\n                <br />\r\n                <Table dataSource={ds_projects} columns={tablecolumns} />\r\n              </Col>\r\n            </Row>\r\n          </div>\r\n        </Content>\r\n        <FOOTERVIEW />\r\n      </Layout>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default Index;\r\n","import React from 'react';\r\nimport 'antd/dist/antd.css';\r\nimport '../index.css';\r\nimport { Layout, Breadcrumb, Typography, Input, Row, Col, DatePicker, notification, Button, Select } from 'antd';\r\nimport { Link } from \"react-router-dom\";\r\nimport 'antd/dist/antd.css';\r\nimport SIDERVIEW from '../layout/siderview';\r\nimport HEADERVIEW from '../layout/headerview';\r\nimport FOOTERVIEW from '../layout/footerview';\r\nimport moment from \"moment\";\r\n\r\nfunction Index() \r\n{\r\n    const {Content} = Layout;\r\n    const { Option } = Select;\r\n    \r\n    var apiurl = localStorage.getItem('session_api');\r\n\r\n    const [url_proid] = React.useState(window.location.href.split('/').reverse()[0]);\r\n    const dateFormat = \"YYYY-MMM-DD\";\r\n    const [proname , setproname] = React.useState(\"\");\r\n    const [datestart , setdatestart] = React.useState(moment(new Date()).format(dateFormat));\r\n    const [dateend , setdateend] = React.useState(moment(new Date()).format(dateFormat));\r\n    const [prostatus , setprostatus] = React.useState(\"\");\r\n \r\n    function onChangeText(e) {\r\n        setproname(e.target.value);\r\n      }\r\n\r\n    function onChangeStart(date, dateString) {\r\n        if(dateString === \"\")\r\n        {\r\n          setdatestart(moment(new Date()).format(dateFormat));\r\n        }\r\n        else\r\n        {\r\n          setdatestart(dateString);\r\n        }   \r\n        \r\n      }\r\n\r\n    function onChangeEnd(date, dateString) {\r\n        if(dateString === \"\")\r\n        {\r\n          setdateend(moment(new Date()).format(dateFormat));\r\n        }\r\n        else\r\n        {\r\n          setdateend(dateString);\r\n        }  \r\n      }\r\n\r\n      function onChangeStatus(value) {\r\n        setprostatus(value);\r\n      }\r\n\r\n      function updateProject()\r\n      {\r\n          if(proname === \"\")\r\n          {\r\n              notification['error']({\r\n                  message: 'Data Error',\r\n                  description:'Please Enter Project Name.',\r\n                  style:{color: '#000',border: '1px solid #ffa39e',backgroundColor: '#ff6961'},\r\n                });\r\n          }\r\n          else if(datestart === \"\")\r\n          {\r\n              notification['error']({\r\n                  message: 'Data Error',\r\n                  description:'Please Select Project Start Date.',\r\n                  style:{color: '#000',border: '1px solid #ffa39e',backgroundColor: '#ff6961'},\r\n                });\r\n          }\r\n          else if(dateend === \"\")\r\n          {\r\n              notification['error']({\r\n                  message: 'Data Error',\r\n                  description:'Please Select Project End Date.',\r\n                  style:{color: '#000',border: '1px solid #ffa39e',backgroundColor: '#ff6961'},\r\n                });\r\n          }\r\n          else if(prostatus === \"\")\r\n          {\r\n              notification['error']({\r\n                  message: 'Data Error',\r\n                  description:'Please Select Project Status.',\r\n                  style:{color: '#000',border: '1px solid #ffa39e',backgroundColor: '#ff6961'},\r\n                });\r\n          }\r\n          else\r\n          {\r\n            const sendOptions = {\r\n                method: 'put',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({\"proid\": url_proid ,\"proname\" : proname , \"prostart\" : datestart, \"proend\" : dateend, \"prostatus\" : prostatus})\r\n              };\r\n\r\n              fetch(`${apiurl}/projects/updateprojects`,sendOptions)\r\n                .then(response => response.json())\r\n                .then(data => \r\n                {\r\n                    if(data.Type === \"SUCCESS\")\r\n                    {\r\n                        \r\n                        notification['success']({\r\n                            message: 'Data Success',\r\n                            description: data.Msg,\r\n                            style:{color: '#000',border: '1px solid #ccffcc',backgroundColor: '#99ff66'},\r\n                          });\r\n                    \r\n                    }\r\n        \r\n                    if(data.Type === \"ERROR\")\r\n                    {\r\n                        localStorage.clear();\r\n                        notification['error']({\r\n                            message: 'Data Error',\r\n                            description: data.Msg,\r\n                            style:{color: '#000',border: '1px solid #ffa39e',backgroundColor: '#ff6961'},\r\n                          });\r\n                    }\r\n        \r\n                })\r\n                .catch(error => {\r\n                    notification['error']({\r\n                        message: 'Data Error',\r\n                        description: error,\r\n                        style:{color: '#000',border: '1px solid #ffa39e',backgroundColor: '#ff6961'},\r\n                      });\r\n                });\r\n          }\r\n      }\r\n\r\n      React.useEffect(() => {\r\n    \r\n        fetch(`${apiurl}/projects/projectdetails/${url_proid}`)\r\n        .then(res => res.json())\r\n        .then(response => { \r\n\r\n            if(response.Type === \"SUCCESS\")\r\n            {\r\n              setproname(response.Dataset[0].pro_name);\r\n              setdatestart(String(moment(response.Dataset[0].pro_start).format(dateFormat)));\r\n              setdateend(String(moment(response.Dataset[0].pro_end).format(dateFormat)));\r\n              setprostatus(response.Dataset[0].pro_status);\r\n\r\n                notification['success']({\r\n                    message: 'Data Success',\r\n                    description: 'Data Loaded Successfully.',\r\n                    style:{color: '#000',border: '1px solid #ccffcc',backgroundColor: '#99ff66'},\r\n                  });\r\n            }\r\n            else\r\n            {\r\n                notification['error']({\r\n                    message: 'Data Error',\r\n                    description: 'Data Loading Error.',\r\n                    style:{color: '#000',border: '1px solid #ffa39e',backgroundColor: '#ff6961'},\r\n                  });\r\n            }\r\n\r\n             \r\n        })\r\n        .catch(error => {\r\n\r\n            notification['error']({\r\n                message: 'Data Error',\r\n                description: error,\r\n                style:{color: '#000',border: '1px solid #ffa39e',backgroundColor: '#ff6961'},\r\n              });\r\n\r\n        });\r\n\r\n    \r\n}, [apiurl,url_proid]);\r\n \r\n    return( <Layout style={{ minHeight: '100vh' }}>\r\n    <SIDERVIEW />\r\n    <Layout className=\"site-layout\">\r\n      <HEADERVIEW />\r\n      <Content style={{ margin: '0 16px'}}>\r\n        <Breadcrumb style={{ margin: '16px 0' }}>\r\n          <Breadcrumb.Item><Link to=\"/allprojects\">Projects</Link></Breadcrumb.Item>\r\n          <Breadcrumb.Item>Edit Projects</Breadcrumb.Item>\r\n        </Breadcrumb>\r\n        <div className=\"site-layout-background\" style={{ padding: 24, minHeight: 360 }}>\r\n          <Row>\r\n            <Col span={12}>\r\n                <Typography.Title level={5} style={{color:\"#6532a8\"}}>EDIT PROJECT DETAILS</Typography.Title>\r\n                <br />\r\n                <Typography.Text style={{color:\"blue\"}}>Project Name :</Typography.Text>\r\n                <br />\r\n                <Input required={true} size=\"medium\" value={proname} onChange={onChangeText}/>\r\n                <br /><br />\r\n                <Typography.Text style={{color:\"blue\"}}>Project Start Date :</Typography.Text>\r\n                <br />\r\n                <DatePicker onChange={onChangeStart} value={moment(datestart, dateFormat)} format={dateFormat}/>\r\n                <br /><br />\r\n                <Typography.Text style={{color:\"blue\"}}>Project End Date :</Typography.Text>\r\n                <br />\r\n                <DatePicker onChange={onChangeEnd} value={moment(dateend, dateFormat)} format={dateFormat}/>\r\n                <br /><br />\r\n                <Typography.Text style={{color:\"blue\"}}>Project Status :</Typography.Text>\r\n                <br />\r\n                <Select style={{ width: 150 }} onChange={onChangeStatus} value={prostatus}>\r\n                  <Option value=\"Ongoing\">Ongoing</Option>\r\n                  <Option value=\"Onhold\">Onhold</Option>\r\n                  <Option value=\"Finished\">Finished</Option>\r\n                  <Option value=\"Cancelled\">Cancelled</Option>\r\n                </Select>\r\n                <br/>\r\n                <br/>\r\n                <Button  onClick={updateProject} type=\"primary\" htmlType=\"submit\" size=\"large\">\r\n                    Update Project Details\r\n                </Button>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n      </Content>\r\n      <FOOTERVIEW/>\r\n    </Layout>\r\n  </Layout>);\r\n}\r\n\r\nexport default Index;\r\n\r\n","import React from 'react';\r\nimport 'antd/dist/antd.css';\r\nimport '../index.css';\r\nimport { Layout, Breadcrumb, Typography, Select, Row, Col, notification, Table  } from 'antd';\r\nimport { Link } from \"react-router-dom\";\r\nimport 'antd/dist/antd.css';\r\nimport SIDERVIEW from '../layout/siderview';\r\nimport HEADERVIEW from '../layout/headerview';\r\nimport FOOTERVIEW from '../layout/footerview';\r\nimport moment from 'moment';\r\nimport HeatMap from '@uiw/react-heat-map';\r\nimport Tooltip from '@uiw/react-tooltip';\r\n\r\nfunction Index() \r\n{\r\n    const {Content} = Layout;\r\n    \r\n    const { Option } = Select;\r\n  \r\n    var apiurl = localStorage.getItem('session_api');\r\n    const [url_userid] = React.useState(window.location.href.split('/').reverse()[0]);\r\n    const [thisyear] = React.useState(new Date().getFullYear());\r\n    const [Dataforview,setDataforview] = React.useState([]);\r\n\r\n    const tablecolumns = [\r\n      {\r\n        title: \"Date\",\r\n        dataIndex: \"date\",\r\n        key: \"date\",\r\n        sorter: (a, b) => moment(a.date).unix() - moment(b.date).unix()\r\n      },\r\n      {\r\n        title: \"Capacity Hours\",\r\n        dataIndex: \"count\",\r\n        key: \"count\",\r\n        sorter: (a, b) => a.count - b.count,\r\n      }\r\n    ];\r\n\r\n    function handleChange_year(value) {\r\n      \r\n      const sendOptions = {\r\n        method: 'post',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({\"userid\": url_userid ,\"year\" : value})\r\n      };\r\n\r\n      fetch(`${apiurl}/dataforchart/userwiseheatmap`,sendOptions)\r\n      .then(res => res.json())\r\n      .then(response => { \r\n\r\n          if(response.Type === \"SUCCESS\")\r\n          {\r\n            setDataforview(response.Dataset);\r\n\r\n              /*notification['success']({\r\n                  message: 'Data Success',\r\n                  description: 'Data Loaded Successfully.',\r\n                  style:{color: '#000',border: '1px solid #ccffcc',backgroundColor: '#99ff66'},\r\n                });*/\r\n          }\r\n          else\r\n          {\r\n              notification['error']({\r\n                  message: 'Data Error',\r\n                  description: 'Data Loading Error.',\r\n                  style:{color: '#000',border: '1px solid #ffa39e',backgroundColor: '#ff6961'},\r\n                });\r\n          }\r\n\r\n           \r\n      })\r\n      .catch(error => {\r\n\r\n          notification['error']({\r\n              message: 'Data Error',\r\n              description: error,\r\n              style:{color: '#000',border: '1px solid #ffa39e',backgroundColor: '#ff6961'},\r\n            });\r\n\r\n      });\r\n\r\n    }\r\n\r\n    React.useEffect(() => {\r\n    \r\n      const sendOptions = {\r\n        method: 'post',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({\"userid\": url_userid ,\"year\" : thisyear})\r\n      };\r\n\r\n      fetch(`${apiurl}/dataforchart/userwiseheatmap`,sendOptions)\r\n      .then(res => res.json())\r\n      .then(response => { \r\n\r\n          if(response.Type === \"SUCCESS\")\r\n          {\r\n            setDataforview(response.Dataset);\r\n\r\n              /*notification['success']({\r\n                  message: 'Data Success',\r\n                  description: 'Data Loaded Successfully.',\r\n                  style:{color: '#000',border: '1px solid #ccffcc',backgroundColor: '#99ff66'},\r\n                });*/\r\n          }\r\n          else\r\n          {\r\n              notification['error']({\r\n                  message: 'Data Error',\r\n                  description: 'Data Loading Error.',\r\n                  style:{color: '#000',border: '1px solid #ffa39e',backgroundColor: '#ff6961'},\r\n                });\r\n          }\r\n\r\n           \r\n      })\r\n      .catch(error => {\r\n\r\n          notification['error']({\r\n              message: 'Data Error',\r\n              description: error,\r\n              style:{color: '#000',border: '1px solid #ffa39e',backgroundColor: '#ff6961'},\r\n            });\r\n\r\n      });\r\n\r\n  \r\n}, [apiurl,url_userid,thisyear]);\r\n    \r\n    return( \r\n    <Layout style={{ minHeight: '100vh' }}>\r\n    <SIDERVIEW />\r\n    <Layout className=\"site-layout\">\r\n      <HEADERVIEW />\r\n      <Content style={{ margin: '0 16px'}}>\r\n        <Breadcrumb style={{ margin: '16px 0' }}>\r\n          <Breadcrumb.Item><Link to=\"/allusers\">User Wise</Link></Breadcrumb.Item>\r\n          <Breadcrumb.Item>Capacity - Heatmap</Breadcrumb.Item>\r\n        </Breadcrumb>\r\n        <div className=\"site-layout-background\" style={{ padding: 24, minHeight: 360 }}>\r\n          <Row>\r\n          <Col span={24}>\r\n          <Select defaultValue=\"2021\" style={{ width: 120 }} onChange={handleChange_year}>\r\n            <Option value=\"2020\">2020</Option>\r\n            <Option value=\"2021\">2021</Option>\r\n            <Option value=\"2022\">2022</Option>\r\n            <Option value=\"2023\">2023</Option>\r\n            <Option value=\"2024\">2024</Option>\r\n            <Option value=\"2025\">2025</Option>\r\n          </Select>\r\n          </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col span={24}>\r\n              <HeatMap \r\n              value={Dataforview} \r\n              startDate={new Date('2021/01/01')} \r\n              endDate={new Date('2021/12/31')} \r\n              width={'auto'}\r\n              height={'400'}\r\n              rectSize={21}\r\n              legendCellSize={25}\r\n              panelColors={{ 0: '#EBEDF0', 1: '#cfe2f3', 8: '#2986cc', 9: '#196127', 100: '#cc0000' }}\r\n              weekLabels={['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat']}\r\n              rectProps={{\r\n                rx: 15\r\n              }}\r\n              rectRender={(props, data) => {\r\n              // if (!data.count) return <rect {...props} />;\r\n              return (\r\n                <Tooltip key={props.key} placement=\"top\" content={<p>Hours: {data.count}<br/>Date: {data.date}</p>}>\r\n                  <rect {...props}/>\r\n                </Tooltip>\r\n              );\r\n            }}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col span={24}>\r\n            <Table dataSource={Dataforview} columns={tablecolumns} />\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n      </Content>\r\n      <FOOTERVIEW/>\r\n    </Layout>\r\n  </Layout>);\r\n}\r\n\r\nexport default Index;\r\n\r\n","import React from \"react\";\r\nimport \"antd/dist/antd.css\";\r\nimport \"../index.css\";\r\nimport {\r\n  Layout,\r\n  Breadcrumb,\r\n  Typography,\r\n  Input,\r\n  Row,\r\n  Col,\r\n  notification,\r\n  Button,\r\n} from \"antd\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"antd/dist/antd.css\";\r\nimport SIDERVIEW from \"../layout/siderview\";\r\nimport HEADERVIEW from \"../layout/headerview\";\r\nimport FOOTERVIEW from \"../layout/footerview\";\r\n\r\nfunction Index() {\r\n  const { Content } = Layout;\r\n  \r\n  var apiurl = localStorage.getItem(\"session_api\");\r\n\r\n  const [empad, setempad] = React.useState(\"\");\r\n  const [empname, setempname] = React.useState(\"\");\r\n  const [emphours, setempwhours] = React.useState(\"0\");\r\n\r\n  function onChangeEmpad(e) {\r\n    setempad(e.target.value);\r\n  }\r\n\r\n  function onChangeEmpName(e) {\r\n    setempname(e.target.value);\r\n  }\r\n\r\n  function onChangeWhours(e) {\r\n    setempwhours(e.target.value);\r\n  }\r\n\r\n  function addemployee() {\r\n   \r\n    if (empad === \"\") {\r\n      notification[\"error\"]({\r\n        message: \"Data Error\",\r\n        description: \"Please Enter Employee AD Name.\",\r\n        style: {\r\n          color: \"#000\",\r\n          border: \"1px solid #ffa39e\",\r\n          backgroundColor: \"#ff6961\",\r\n        },\r\n      });\r\n    } else if (empname === \"\") {\r\n      notification[\"error\"]({\r\n        message: \"Data Error\",\r\n        description: \"Please Enter Employee Name.\",\r\n        style: {\r\n          color: \"#000\",\r\n          border: \"1px solid #ffa39e\",\r\n          backgroundColor: \"#ff6961\",\r\n        },\r\n      });\r\n    } else if (emphours === \"\") {\r\n      notification[\"error\"]({\r\n        message: \"Data Error\",\r\n        description: \"Please Enter Employee Working Hours.\",\r\n        style: {\r\n          color: \"#000\",\r\n          border: \"1px solid #ffa39e\",\r\n          backgroundColor: \"#ff6961\",\r\n        },\r\n      });\r\n    } else {\r\n      \r\n      \r\n      const sendOptions = {\r\n        method: \"post\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          empad: empad,\r\n          empname: empname,\r\n          empwhours: emphours,\r\n        }),\r\n      };\r\n      \r\n     fetch(`${apiurl}/employee/addemployee`, sendOptions)\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          if (data.Type === \"SUCCESS\") {\r\n            setempad(\"\");\r\n            setempname(\"\");\r\n            setempwhours(0);\r\n\r\n            notification[\"success\"]({\r\n              message: \"Data Success\",\r\n              description: data.Msg,\r\n              style: {\r\n                color: \"#000\",\r\n                border: \"1px solid #ccffcc\",\r\n                backgroundColor: \"#99ff66\",\r\n              },\r\n            });\r\n          }\r\n\r\n          if (data.Type === \"ERROR\") {\r\n            localStorage.clear();\r\n            notification[\"error\"]({\r\n              message: \"Data Error\",\r\n              description: data.Msg,\r\n              style: {\r\n                color: \"#000\",\r\n                border: \"1px solid #ffa39e\",\r\n                backgroundColor: \"#ff6961\",\r\n              },\r\n            });\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          notification[\"error\"]({\r\n            message: \"Data Error\",\r\n            description: error,\r\n            style: {\r\n              color: \"#000\",\r\n              border: \"1px solid #ffa39e\",\r\n              backgroundColor: \"#ff6961\",\r\n            },\r\n          });\r\n        });\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Layout style={{ minHeight: \"100vh\" }}>\r\n      <SIDERVIEW />\r\n      <Layout className=\"site-layout\">\r\n        <HEADERVIEW />\r\n        <Content style={{ margin: \"0 16px\" }}>\r\n          <Breadcrumb style={{ margin: \"16px 0\" }}>\r\n            <Breadcrumb.Item>\r\n              <Link to=\"/allemployee\">Employee</Link>\r\n            </Breadcrumb.Item>\r\n            <Breadcrumb.Item>New Employee</Breadcrumb.Item>\r\n          </Breadcrumb>\r\n          <div\r\n            className=\"site-layout-background\"\r\n            style={{ padding: 24, minHeight: 360 }}\r\n          >\r\n            <Row>\r\n              <Col span={12}>\r\n                <Typography.Title level={5} style={{ color: \"#6532a8\" }}>\r\n                  ADD NEW EMPLOYEE\r\n                </Typography.Title>\r\n                <br />\r\n                <Typography.Text style={{ color: \"blue\" }}>\r\n                Employee AD Name : (DevonP)\r\n                </Typography.Text>\r\n                <br />\r\n                <Input\r\n                  required={true}\r\n                  size=\"medium\"\r\n                  value={empad}\r\n                  onChange={onChangeEmpad}\r\n                />\r\n                <br />\r\n                <br />\r\n                <Typography.Text style={{ color: \"blue\" }}>\r\n                  Employee Name : (Devon)\r\n                </Typography.Text>\r\n                <br />\r\n                <Input\r\n                  required={true}\r\n                  size=\"medium\"\r\n                  value={empname}\r\n                  onChange={onChangeEmpName}\r\n                />\r\n                <br />\r\n                <br />\r\n                <Typography.Text style={{ color: \"blue\" }}>\r\n                  Employee Working Hours :\r\n                </Typography.Text>\r\n                <br />\r\n                <Input\r\n                  required={true}\r\n                  size=\"medium\"\r\n                  value={emphours}\r\n                  onChange={onChangeWhours}\r\n                />\r\n                <br />\r\n                <br />\r\n                <Button\r\n                  onClick={addemployee}\r\n                  type=\"primary\"\r\n                  htmlType=\"submit\"\r\n                  size=\"large\"\r\n                >\r\n                  Add New employee\r\n                </Button>\r\n              </Col>\r\n            </Row>\r\n          </div>\r\n        </Content>\r\n        <FOOTERVIEW />\r\n      </Layout>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default Index;\r\n","import React from \"react\";\r\nimport \"antd/dist/antd.css\";\r\nimport \"../index.css\";\r\nimport {\r\n  Layout,\r\n  Breadcrumb,\r\n  Typography,\r\n  Row,\r\n  Col,\r\n  notification,\r\n  Button,\r\n  Tooltip,\r\n  Table,\r\n  Tag,\r\n} from \"antd\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"antd/dist/antd.css\";\r\n//import Moment from \"react-moment\";\r\nimport { EditOutlined,DotChartOutlined } from \"@ant-design/icons\";\r\nimport SIDERVIEW from \"../layout/siderview\";\r\nimport HEADERVIEW from \"../layout/headerview\";\r\nimport FOOTERVIEW from \"../layout/footerview\";\r\n\r\nfunction Index() {\r\n  const { Content } = Layout;\r\n  \r\n  var apiurl = localStorage.getItem(\"session_api\");\r\n\r\n  const [ds_employee, setds_employee] = React.useState([]);\r\n\r\n  const tablecolumns = [\r\n    {\r\n      title: \"Action\",\r\n      dataIndex: \"emp_id\",\r\n      key: \"emp_id\",\r\n      render: (val) => ActionButtonStrip(val),\r\n      \r\n    },\r\n\r\n    {\r\n      title: \"Employee AD Name\",\r\n      dataIndex: \"emp_ad\",\r\n      key: \"emp_ad\",\r\n      sorter: (a, b) => a.emp_ad.localeCompare(b.emp_ad),\r\n      sortDirections: [\"ascend\"],\r\n    },\r\n    {\r\n      title: \"Employee  Name\",\r\n      dataIndex: \"emp_name\",\r\n      key: \"emp_name\",\r\n      sorter: (a, b) => a.emp_name.localeCompare(b.emp_name),\r\n      sortDirections: [\"ascend\"],\r\n    },\r\n    {\r\n      title: \"Employee  Working Hours\",\r\n      dataIndex: \"emp_whours\",\r\n      key: \"emp_whours\",\r\n      sorter: (a, b) => a.emp_whours.localeCompare(b.emp_whours),\r\n      sortDirections: [\"ascend\"],\r\n    },\r\n\r\n    {\r\n      title: \"Employee Active\",\r\n      dataIndex: \"emp_active\",\r\n      key: \"emp_active\",\r\n      render: (val) => YesNo(val),\r\n    },\r\n  ];\r\n\r\n  function YesNo(value) {\r\n    if (value === true) {\r\n      return (\r\n        <Tag color={\"green\"} key={\"Active\"}>\r\n          Active\r\n        </Tag>\r\n      );\r\n    } else {\r\n      return (\r\n        <Tag color={\"red\"} key={\"Disable\"}>\r\n          Disable\r\n        </Tag>\r\n      );\r\n    }\r\n  }\r\n\r\n  function ActionButtonStrip(value) {\r\n\r\n    return (\r\n      <>\r\n      <Tooltip title=\"Edit\">\r\n        <Link to={\"/editemployee/\" + value}>\r\n          <Button shape=\"circle\" type=\"primary\" icon={<EditOutlined />} />\r\n        </Link>\r\n      </Tooltip>\r\n      <Tooltip title=\"Capacity Heatmap\">\r\n        <Link to={\"/projectview1/\" + value}>\r\n          <Button shape=\"circle\" type=\"primary\" style={{color:\"black\",backgroundColor:\"orangered\",borderBlockColor:\"orangered\"}} icon={<DotChartOutlined />} />\r\n        </Link>\r\n      </Tooltip>\r\n      </>\r\n    );\r\n  }\r\n\r\n  React.useEffect(() => {\r\n     \r\n    fetch(`${apiurl}/employee/allemployee`)\r\n      .then((res) => res.json())\r\n      .then((response) => {\r\n        if (response.Type === \"SUCCESS\") {\r\n          setds_employee(response.Dataset);\r\n\r\n          notification[\"success\"]({\r\n            message: \"Data Success\",\r\n            description: \"Data Loaded Successfully.\",\r\n            style: {\r\n              color: \"#000\",\r\n              border: \"1px solid #ccffcc\",\r\n              backgroundColor: \"#99ff66\",\r\n            },\r\n          });\r\n        } else {\r\n          notification[\"error\"]({\r\n            message: \"Data Error\",\r\n            description: \"Data Loading Error.\",\r\n            style: {\r\n              color: \"#000\",\r\n              border: \"1px solid #ffa39e\",\r\n              backgroundColor: \"#ff6961\",\r\n            },\r\n          });\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        notification[\"error\"]({\r\n          message: \"Data Error\",\r\n          description: error,\r\n          style: {\r\n            color: \"#000\",\r\n            border: \"1px solid #ffa39e\",\r\n            backgroundColor: \"#ff6961\",\r\n          },\r\n        });\r\n      });\r\n  }, [apiurl]);\r\n\r\n  return (\r\n    <Layout style={{ minHeight: \"100vh\" }}>\r\n      <SIDERVIEW />\r\n      <Layout className=\"site-layout\">\r\n        <HEADERVIEW />\r\n        <Content style={{ margin: \"0 16px\" }}>\r\n          <Breadcrumb style={{ margin: \"16px 0\" }}>\r\n            <Breadcrumb.Item>\r\n              <Link to=\"/allemployee\">Employee</Link>\r\n            </Breadcrumb.Item>\r\n            <Breadcrumb.Item>All Employee</Breadcrumb.Item>\r\n          </Breadcrumb>\r\n          <div\r\n            className=\"site-layout-background\"\r\n            style={{ padding: 24, minHeight: 360 }}\r\n          >\r\n            <Row>\r\n              <Col span={24}>\r\n                <Typography.Title level={5} style={{ color: \"#6532a8\" }}>\r\n                  ALL EMPLOYEE\r\n                </Typography.Title>\r\n                <br />\r\n                <Table dataSource={ds_employee} columns={tablecolumns} />\r\n              </Col>\r\n            </Row>\r\n          </div>\r\n        </Content>\r\n        <FOOTERVIEW />\r\n      </Layout>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default Index;\r\n","import React from 'react';\r\nimport 'antd/dist/antd.css';\r\nimport '../index.css';\r\nimport { Layout, Breadcrumb, Typography, Input, Row, Col,notification, Button, Switch } from 'antd';\r\nimport { Link } from \"react-router-dom\";\r\nimport 'antd/dist/antd.css';\r\nimport SIDERVIEW from '../layout/siderview';\r\nimport HEADERVIEW from '../layout/headerview';\r\nimport FOOTERVIEW from '../layout/footerview';\r\n\r\nfunction Index() \r\n{\r\n    const {Content} = Layout;\r\n    \r\n    var apiurl = localStorage.getItem('session_api');\r\n\r\n    const [url_empid] = React.useState(window.location.href.split('/').reverse()[0]);\r\n    const [empad , setempad] = React.useState(\"\");\r\n    const [empname , setempname] = React.useState(\"\");\r\n    const [empwhours , setempwhours] = React.useState(\"\");\r\n    const [empactive , setempactive] = React.useState(false);\r\n    \r\n \r\n      function onChangeEmpad(e) {\r\n        setempad(e.target.value);\r\n      }\r\n\r\n      function onChangeempname(e) {\r\n        setempname(e.target.value);\r\n      }\r\n\r\n      function onChangeWhours(e) {\r\n        setempwhours(e.target.value);\r\n      }\r\n\r\n      function onChangeActive(checked) {\r\n        setempactive(checked);\r\n      }\r\n        \r\n      \r\n      function updateemployee()\r\n      {\r\n          if(empad === \"\")\r\n          {\r\n              notification['error']({\r\n                  message: 'Data Error',\r\n                  description:'Please Enter Employee AD Name.',\r\n                  style:{color: '#000',border: '1px solid #ffa39e',backgroundColor: '#ff6961'},\r\n                });\r\n          }\r\n          else if(empname === \"\")\r\n          {\r\n              notification['error']({\r\n                  message: 'Data Error',\r\n                  description:'Please Enter Employee Name.',\r\n                  style:{color: '#000',border: '1px solid #ffa39e',backgroundColor: '#ff6961'},\r\n                });\r\n          }\r\n          else if(empwhours=== \"\")\r\n          {\r\n              notification['error']({\r\n                  message: 'Data Error',\r\n                  description:'Please Enter Employee Working Hours.',\r\n                  style:{color: '#000',border: '1px solid #ffa39e',backgroundColor: '#ff6961'},\r\n                });\r\n          }\r\n          \r\n          else\r\n          {\r\n            const sendOptions = {\r\n                method: 'put',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({\"empid\": url_empid ,\"empad\" : empad , \"empname\" : empname, \"empwhours\" : empwhours, \"empactive\" : empactive})\r\n              };\r\n\r\n              \r\n              fetch(`${apiurl}/employee/updateemployee`,sendOptions)\r\n                .then(response => response.json())\r\n                .then(data => \r\n                {\r\n                  \r\n                    if(data.Type === \"SUCCESS\")\r\n                    {\r\n                        \r\n                        notification['success']({\r\n                            message: 'Data Success',\r\n                            description: data.Msg,\r\n                            style:{color: '#000',border: '1px solid #ccffcc',backgroundColor: '#99ff66'},\r\n                          });\r\n                    \r\n                    }\r\n        \r\n                    if(data.Type === \"ERROR\")\r\n                    {\r\n                        localStorage.clear();\r\n                        notification['error']({\r\n                            message: 'Data Error',\r\n                            description: data.Msg,\r\n                            style:{color: '#000',border: '1px solid #ffa39e',backgroundColor: '#ff6961'},\r\n                          });\r\n                    }\r\n        \r\n                })\r\n                .catch(error => {\r\n                    notification['error']({\r\n                        message: 'Data Error',\r\n                        description: error,\r\n                        style:{color: '#000',border: '1px solid #ffa39e',backgroundColor: '#ff6961'},\r\n                      });\r\n                });\r\n          }\r\n      }\r\n\r\n      React.useEffect(() => {\r\n    \r\n        \r\n        fetch(`${apiurl}/employee/employeedatails/${url_empid}`)\r\n        .then(res => res.json())\r\n        .then(response => { \r\n\r\n         \r\n\r\n            if(response.Type === \"SUCCESS\")\r\n            {\r\n              setempad(response.Dataset[0].emp_ad);\r\n              setempname(response.Dataset[0].emp_name);\r\n              setempwhours(response.Dataset[0].emp_whours);\r\n              setempactive(response.Dataset[0].emp_active);\r\n\r\n                notification['success']({\r\n                    message: 'Data Success',\r\n                    description: 'Data Loaded Successfully.',\r\n                    style:{color: '#000',border: '1px solid #ccffcc',backgroundColor: '#99ff66'},\r\n                  });\r\n            }\r\n            else\r\n            {\r\n                notification['error']({\r\n                    message: 'Data Error',\r\n                    description: 'Data Loading Error.',\r\n                    style:{color: '#000',border: '1px solid #ffa39e',backgroundColor: '#ff6961'},\r\n                  });\r\n            }\r\n\r\n             \r\n        })\r\n        .catch(error => {\r\n\r\n            notification['error']({\r\n                message: 'Data Error',\r\n                description: error,\r\n                style:{color: '#000',border: '1px solid #ffa39e',backgroundColor: '#ff6961'},\r\n              });\r\n\r\n        });\r\n\r\n    \r\n}, [apiurl,url_empid]);\r\n \r\n    return( <Layout style={{ minHeight: '100vh' }}>\r\n    <SIDERVIEW />\r\n    <Layout className=\"site-layout\">\r\n      <HEADERVIEW />\r\n      <Content style={{ margin: '0 16px'}}>\r\n        <Breadcrumb style={{ margin: '16px 0' }}>\r\n          <Breadcrumb.Item><Link to=\"/allemployee\">Employee</Link></Breadcrumb.Item>\r\n          <Breadcrumb.Item>Edit Employee</Breadcrumb.Item>\r\n        </Breadcrumb>\r\n        <div className=\"site-layout-background\" style={{ padding: 24, minHeight: 360 }}>\r\n          <Row>\r\n            <Col span={12}>\r\n            <Typography.Title level={5} style={{color:\"#6532a8\"}}>EDIT EMPLOYEE DETAILS</Typography.Title>\r\n                <br />\r\n                <Typography.Text style={{color:\"blue\"}}>Employee AD Name : (DevonP)</Typography.Text>\r\n                <br />\r\n                <Input required={true} size=\"medium\" value={empad} onChange={onChangeEmpad}/>\r\n                <br /><br />\r\n                <Typography.Text style={{color:\"blue\"}}>Employee Name : (Devon)</Typography.Text>\r\n                <br />\r\n                <Input required={true} size=\"medium\" value={empname} onChange={onChangeempname}/>\r\n                <br /><br />\r\n                <Typography.Text style={{color:\"blue\"}}>Employee Working Hours :</Typography.Text>\r\n                <br />\r\n                <Input required={true} size=\"medium\" value={empwhours} onChange={onChangeWhours}/>\r\n                <br /><br />\r\n                <Typography.Text style={{color:\"blue\"}}>Employee Is Active :</Typography.Text>\r\n                <br />\r\n                <Switch required={true} size=\"medium\" checked={empactive} onChange={onChangeActive}/>\r\n                <br/>\r\n                <br/>\r\n                <Button  onClick={updateemployee} type=\"primary\" htmlType=\"submit\" size=\"large\">\r\n                    Update Employee Details\r\n                </Button>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n      </Content>\r\n      <FOOTERVIEW/>\r\n    </Layout>\r\n  </Layout>);\r\n}\r\n\r\nexport default Index;\r\n\r\n","import React from \"react\";\r\nimport \"antd/dist/antd.css\";\r\nimport \"../index.css\";\r\nimport {\r\n  Layout,\r\n  Breadcrumb,\r\n  Typography,\r\n  Row,\r\n  Col,\r\n  notification,\r\n  DatePicker,\r\n  Select,\r\n  Button,\r\n  Table,\r\n  Tooltip\r\n} from \"antd\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"antd/dist/antd.css\";\r\nimport SIDERVIEW from \"../layout/siderview\";\r\nimport HEADERVIEW from \"../layout/headerview\";\r\nimport FOOTERVIEW from \"../layout/footerview\";\r\nimport moment from 'moment';\r\nimport { EditOutlined } from '@ant-design/icons';\r\n\r\nfunction Index() {\r\n  const { Content } = Layout;\r\n  const { Option } = Select;\r\n\r\n  const dateFormat = \"YYYY-MM-DD\";\r\n\r\n  var apiurl = localStorage.getItem(\"session_api\");\r\n \r\n  const [caldate, setcaldate] = React.useState(new Date());\r\n  const [caldatetype, setcaldatetype] = React.useState(\"\");\r\n\r\n  const [ds_dates, setds_dates] = React.useState([]);\r\n\r\n  function EditChange(val)\r\n  {\r\n    setcaldate(val);\r\n    setcaldatetype(\"\");\r\n  }\r\n\r\n  function ActionButtonStrip(value)\r\n      {\r\n        return (<Tooltip title=\"Change\">\r\n        <Button onClick={()=>EditChange(value)} shape=\"circle\" type=\"primary\" icon={<EditOutlined />} />\r\n      </Tooltip>);\r\n      }\r\n\r\n  const tablecolumns = [\r\n    {\r\n      title: 'Action',\r\n      dataIndex: 'cal_date',\r\n      width: '10%',\r\n      key: 'cal_date',\r\n      render: (val) => ActionButtonStrip(val),\r\n    },\r\n    {\r\n      title: \"Date\",\r\n      dataIndex: \"cal_date\",\r\n      key: \"cal_date\",\r\n      sorter: (a, b) => moment(a.cal_date) - moment(b.cal_date),\r\n    },\r\n    {\r\n      title: \"Type\",\r\n      dataIndex: \"cal_datetype\",\r\n      key: \"cal_datetype\",\r\n      sorter: (a, b) => a.cal_datetype.localeCompare(b.cal_datetype),\r\n      filters: [{text: 'Work Day',value: 'Work Day'},{text: 'Weekend',value: 'Weekend'},{text: 'Holiday',value: 'Holiday'}],\r\n      onFilter: (value, record) => record.cal_datetype.indexOf(value) === 0,\r\n    },\r\n  ];\r\n\r\n  function onChangeDate(date, dateString) {\r\n    setcaldate(dateString);\r\n  }\r\n\r\n  function onChangeType(value) {\r\n    setcaldatetype(value);\r\n  }\r\n\r\n  async function addCalendar() {\r\n    if (caldate === \"\") {\r\n      notification[\"error\"]({\r\n        message: \"Data Error\",\r\n        description: \"Please Select Calendar Date\",\r\n        style: {\r\n          color: \"#000\",\r\n          border: \"1px solid #ffa39e\",\r\n          backgroundColor: \"#ff6961\",\r\n        },\r\n      });\r\n    } else if (caldatetype === \"\") {\r\n      notification[\"error\"]({\r\n        message: \"Data Error\",\r\n        description: \"Please Enter Date Type.\",\r\n        style: {\r\n          color: \"#000\",\r\n          border: \"1px solid #ffa39e\",\r\n          backgroundColor: \"#ff6961\",\r\n        },\r\n      });\r\n    } else {\r\n\r\n      const sendOptions = {\r\n        method: \"post\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({ caldate: caldate, caldatetype: caldatetype }),\r\n      };\r\n\r\n      await fetch(`${apiurl}/calendar/calendarmaintain`, sendOptions)\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          if (data.Type === \"SUCCESS\") {\r\n            setcaldatetype(\"\");\r\n\r\n            fetch(`${apiurl}/calendar/allcalendar`)\r\n      .then((res) => res.json())\r\n      .then((response) => {\r\n        if (response.Type === \"SUCCESS\") {\r\n\r\n          setds_dates(response.Dataset);\r\n\r\n        } else {\r\n          notification[\"error\"]({\r\n            message: \"Data Error\",\r\n            description: \"Data Loading Error.\",\r\n            style: {\r\n              color: \"#000\",\r\n              border: \"1px solid #ffa39e\",\r\n              backgroundColor: \"#ff6961\",\r\n            },\r\n          });\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        notification[\"error\"]({\r\n          message: \"Data Error\",\r\n          description: error,\r\n          style: {\r\n            color: \"#000\",\r\n            border: \"1px solid #ffa39e\",\r\n            backgroundColor: \"#ff6961\",\r\n          },\r\n        });\r\n      });\r\n\r\n            notification[\"success\"]({\r\n              message: \"Data Success\",\r\n              description: data.Msg,\r\n              style: {\r\n                color: \"#000\",\r\n                border: \"1px solid #ccffcc\",\r\n                backgroundColor: \"#99ff66\",\r\n              },\r\n            });\r\n          }\r\n\r\n          if (data.Type === \"ERROR\") {\r\n            localStorage.clear();\r\n            notification[\"error\"]({\r\n              message: \"Data Error\",\r\n              description: data.Msg,\r\n              style: {\r\n                color: \"#000\",\r\n                border: \"1px solid #ffa39e\",\r\n                backgroundColor: \"#ff6961\",\r\n              },\r\n            });\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          notification[\"error\"]({\r\n            message: \"Data Error\",\r\n            description: error,\r\n            style: {\r\n              color: \"#000\",\r\n              border: \"1px solid #ffa39e\",\r\n              backgroundColor: \"#ff6961\",\r\n            },\r\n          });\r\n        });\r\n    }\r\n  }\r\n\r\n  React.useEffect(() => {\r\n     \r\n    fetch(`${apiurl}/calendar/allcalendar`)\r\n      .then((res) => res.json())\r\n      .then((response) => {\r\n        if (response.Type === \"SUCCESS\") {\r\n\r\n          setds_dates(response.Dataset);\r\n\r\n        } else {\r\n          notification[\"error\"]({\r\n            message: \"Data Error\",\r\n            description: \"Data Loading Error.\",\r\n            style: {\r\n              color: \"#000\",\r\n              border: \"1px solid #ffa39e\",\r\n              backgroundColor: \"#ff6961\",\r\n            },\r\n          });\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        notification[\"error\"]({\r\n          message: \"Data Error\",\r\n          description: error,\r\n          style: {\r\n            color: \"#000\",\r\n            border: \"1px solid #ffa39e\",\r\n            backgroundColor: \"#ff6961\",\r\n          },\r\n        });\r\n      });\r\n\r\n  }, [apiurl]);\r\n \r\n  return (\r\n    <Layout style={{ minHeight: \"100vh\" }}>\r\n      <SIDERVIEW />\r\n      <Layout className=\"site-layout\">\r\n        <HEADERVIEW />\r\n        <Content style={{ margin: \"0 16px\" }}>\r\n          <Breadcrumb style={{ margin: \"16px 0\" }}>\r\n            <Breadcrumb.Item>\r\n              <Link to=\"/calendarfullview\">Calendar</Link>\r\n            </Breadcrumb.Item>\r\n            <Breadcrumb.Item>Add/Change Calendar</Breadcrumb.Item>\r\n          </Breadcrumb>\r\n          <div\r\n            className=\"site-layout-background\"\r\n            style={{ padding: 24, minHeight: 360 }}\r\n          >\r\n            <Row>\r\n              <Col span={4}>\r\n                <Typography.Title level={5} style={{ color: \"#6532a8\" }}>\r\n                  ADD-CHANGE DATE\r\n                </Typography.Title>\r\n                <br />\r\n                <br />\r\n                <Typography.Text style={{ color: \"blue\" }}>\r\n                  Select Date :\r\n                </Typography.Text>\r\n                <br />\r\n                <DatePicker value={moment(caldate, dateFormat)} format={dateFormat} onChange={onChangeDate} size=\"large\" />\r\n                <br />\r\n                <br />\r\n                <Typography.Text style={{ color: \"blue\" }}>\r\n                  Date Type :\r\n                </Typography.Text>\r\n                <br />\r\n                <Select\r\n                  style={{ width: 150 }}\r\n                  onChange={onChangeType}\r\n                  value={caldatetype}\r\n                >\r\n                  <Option value=\"Work Day\">Work Day</Option>\r\n                  <Option value=\"Weekend\">Weekend</Option>\r\n                  <Option value=\"Holiday\">Holiday</Option>\r\n                </Select>\r\n                <br />\r\n                <br />\r\n                <Button\r\n                  onClick={addCalendar}\r\n                  type=\"primary\"\r\n                  htmlType=\"submit\"\r\n                  size=\"large\"\r\n                >\r\n                  Update Calendar\r\n                </Button>\r\n              </Col>\r\n              <Col span={20}>\r\n                  <Table dataSource={ds_dates} columns={tablecolumns} pagination={{ defaultPageSize: 10, showSizeChanger: true, pageSizeOptions: ['10', '25', '50']}}/>\r\n              </Col>\r\n            </Row>\r\n          </div>\r\n        </Content>\r\n        <FOOTERVIEW />\r\n      </Layout>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default Index;\r\n","import React from \"react\";\r\nimport \"antd/dist/antd.css\";\r\nimport \"../index.css\";\r\nimport {\r\n  Layout,\r\n  Breadcrumb,\r\n  Row,\r\n  Col,\r\n  notification,\r\n} from \"antd\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"antd/dist/antd.css\";\r\nimport SIDERVIEW from \"../layout/siderview\";\r\nimport HEADERVIEW from \"../layout/headerview\";\r\nimport FOOTERVIEW from \"../layout/footerview\";\r\nimport FullCalendar from '@fullcalendar/react' // must go before plugins\r\nimport dayGridPlugin from '@fullcalendar/daygrid' // a plugin!\r\n\r\nfunction Index() {\r\n  const { Content } = Layout;\r\n\r\n  var apiurl = localStorage.getItem(\"session_api\");\r\n \r\n  var dsEventsList = React.useState([]);\r\n\r\n  const [EventList, setEventList] = React.useState([]);\r\n\r\n  const [Dataload, setDataload] = React.useState(false);\r\n\r\n\r\n  function Getcolor(val)\r\n  {\r\n    if(val === \"Work Day\")\r\n    {\r\n      return \"#5384f5\";\r\n    }\r\n    else if(val === \"Weekend\")\r\n    {\r\n      return \"#fcba03\";\r\n    }\r\n    else if(val === \"Holiday\")\r\n    {\r\n      return \"#e03442\";\r\n    }\r\n    else\r\n    {\r\n      return \"#fcfdff\";\r\n    }\r\n  }\r\n  \r\nReact.useEffect(() => {\r\n\r\n  if(Dataload === false)\r\n  {\r\n    fetch(`${apiurl}/calendar/allcalendar`)\r\n    .then((response) => response.json())\r\n    .then((data) => {\r\n      if (data.Type === \"SUCCESS\") {\r\n        dsEventsList.length = 0;\r\n        for (let i = 0; i < data.Dataset.length; i++) {\r\n          \r\n          dsEventsList.push({\r\n            title: data.Dataset[i].cal_datetype,\r\n            date: data.Dataset[i].cal_date,\r\n            display:'background',\r\n            backgroundColor: Getcolor(data.Dataset[i].cal_datetype),\r\n            textColor:'#000'\r\n          });\r\n        }\r\n\r\n        setEventList(dsEventsList);\r\n        setDataload(true);\r\n\r\n        notification[\"success\"]({\r\n          message: \"Calendar Data Loading Success\",\r\n          description: data.Msg,\r\n          style: {\r\n            color: \"#000\",\r\n            border: \"1px solid #ccffcc\",\r\n            backgroundColor: \"#99ff66\",\r\n          },\r\n        });\r\n      }\r\n  \r\n      if (data.Type === \"ERROR\") {\r\n        localStorage.clear();\r\n        notification[\"error\"]({\r\n          message: \"Data Error\",\r\n          description: data.Msg,\r\n          style: {\r\n            color: \"#000\",\r\n            border: \"1px solid #ffa39e\",\r\n            backgroundColor: \"#ff6961\",\r\n          },\r\n        });\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      notification[\"error\"]({\r\n        message: \"Data Error\",\r\n        description: error,\r\n        style: {\r\n          color: \"#000\",\r\n          border: \"1px solid #ffa39e\",\r\n          backgroundColor: \"#ff6961\",\r\n        },\r\n      });\r\n    });\r\n  }\r\n\r\n  \r\n\r\n}, [apiurl,dsEventsList,EventList,Dataload]);\r\n   \r\n  return (\r\n    <Layout style={{ minHeight: \"100vh\" }}>\r\n      <SIDERVIEW />\r\n      <Layout className=\"site-layout\">\r\n        <HEADERVIEW />\r\n        <Content style={{ margin: \"0 16px\" }}>\r\n          <Breadcrumb style={{ margin: \"16px 0\" }}>\r\n            <Breadcrumb.Item>\r\n              <Link to=\"/calendarfullview\">Calendar</Link>\r\n            </Breadcrumb.Item>\r\n            <Breadcrumb.Item>Full Calendar View</Breadcrumb.Item>\r\n          </Breadcrumb>\r\n          <div\r\n            className=\"site-layout-background\"\r\n            style={{ padding: 24, minHeight: 360 }}\r\n          >\r\n            <Row>\r\n              \r\n              <Col span={24}>\r\n                <FullCalendar\r\n                plugins={[ dayGridPlugin ]}\r\n                initialView=\"dayGridMonth\"\r\n                weekends={true}\r\n                firstDay={1}\r\n                events={EventList}\r\n                weekNumbers={true}\r\n                headerToolbar={{ start: 'title', center: '', end: 'today prevYear,prev,next,nextYear' }}\r\n                height='75vh'\r\n                eventTextColor='#000'\r\n              />\r\n\r\n\r\n              </Col>\r\n            </Row>\r\n          </div>\r\n        </Content>\r\n        <FOOTERVIEW />\r\n      </Layout>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default Index;\r\n","import React from \"react\";\r\nimport \"antd/dist/antd.css\";\r\nimport \"../index.css\";\r\nimport {\r\n  Layout,\r\n  Breadcrumb,\r\n  Typography,\r\n  Row,\r\n  Col,\r\n  notification,\r\n  DatePicker,\r\n  Select,\r\n  Button,\r\n  Table,\r\n  Tooltip,\r\n  Input,\r\n  Switch,\r\n  Modal,\r\n  Popconfirm,\r\n} from \"antd\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"antd/dist/antd.css\";\r\nimport SIDERVIEW from \"../layout/siderview\";\r\nimport HEADERVIEW from \"../layout/headerview\";\r\nimport FOOTERVIEW from \"../layout/footerview\";\r\nimport moment from 'moment';\r\nimport { EditOutlined,DeleteOutlined } from '@ant-design/icons';\r\nimport ReactExport from \"@ibrahimrahmani/react-export-excel\";\r\n \r\nfunction Index() {\r\n  const { Content } = Layout;\r\n  const { Option } = Select;\r\n\r\n  const dateFormat = \"YYYY-MM-DD\";\r\n\r\n  const ExcelFile = ReactExport.ExcelFile;\r\n  const ExcelSheet = ReactExport.ExcelFile.ExcelSheet;\r\n  const ExcelColumn = ReactExport.ExcelFile.ExcelColumn;\r\n\r\n  var apiurl = localStorage.getItem(\"session_api\");\r\n  var empid = localStorage.getItem(\"session_sys_empid\");\r\n\r\n  const [caldate, setcaldate] = React.useState(new Date());\r\n\r\n  const [ds_alltasks, setds_alltasks] = React.useState([]);\r\n  \r\n  async function EditChange(val)\r\n  {\r\n    \r\n  }\r\n\r\n  function HourConvert(value)\r\n      {\r\n        var lastno = value.split('.').reverse()[0];\r\n        var firstno = value.split('.').reverse()[1];\r\n        var joinvalue = value;\r\n\r\n        if(lastno === \"00\")\r\n        {\r\n          joinvalue = firstno + \".00\";\r\n        }\r\n        else if(lastno === \"25\")\r\n        {\r\n          joinvalue = firstno + \".15\";\r\n        }\r\n        else if(lastno === \"50\")\r\n        {\r\n          joinvalue = firstno + \".30\";\r\n        }\r\n        else if(lastno === \"75\")\r\n        {\r\n          joinvalue = firstno + \".45\";\r\n        }\r\n\r\n        return joinvalue;\r\n      }\r\n\r\n\r\n  /*const tablecolumns = [\r\n    {\r\n      title: 'Action',\r\n      dataIndex: 'task_id',\r\n      width: '10%',\r\n      key: 'task_id',\r\n      render: (val) => ActionButtonStrip(val),\r\n    },\r\n    {\r\n      title: 'Responsible',\r\n      dataIndex: 'emp_name',\r\n      key: 'emp_name',\r\n      sorter: (a, b) => a.emp_name.localeCompare(b.emp_name),\r\n    },\r\n    {\r\n        title: 'Title',\r\n        dataIndex: 'task_title',\r\n        key: 'task_title',\r\n        sorter: (a, b) => a.task_title.localeCompare(b.task_title),\r\n    },\r\n    {\r\n        title: 'Date',\r\n        dataIndex: 'task_date',\r\n        key: 'task_date',\r\n        sorter: (a, b) => a.task_date.localeCompare(b.task_date),\r\n    },\r\n    {\r\n        title: 'Duration',\r\n        dataIndex: 'task_hours',\r\n        key: 'task_hours',\r\n        render: (val) => HourConvert(val),\r\n        sorter: (a, b) => a.task_hours.localeCompare(b.task_hours),\r\n    },\r\n    {\r\n        title: 'Status',\r\n        dataIndex: 'task_status',\r\n        key: 'task_status',\r\n        sorter: (a, b) => a.task_status.localeCompare(b.task_status),\r\n        filters: [{text: 'Open',value: 'Open'},{text: 'Hold',value: 'Hold'},{text: 'Completed',value: 'Completed'}],\r\n        onFilter: (value, record) => record.task_status.indexOf(value) === 0,\r\n    }\r\n  ];*/\r\n\r\n  function onChangeDate(date, dateString) {\r\n    setcaldate(dateString);\r\n  }\r\n\r\n\r\n  React.useEffect(() => {\r\n\r\n    fetch(`${apiurl}/employee/allactiveemployees`)\r\n      .then((res) => res.json())\r\n      .then((response) => {\r\n        if (response.Type === \"SUCCESS\") {\r\n\r\n            setds_alltasks(response.Dataset);\r\n\r\n        } else {\r\n          notification[\"error\"]({\r\n            message: \"Data Error\",\r\n            description: \"Data Loading Error.\",\r\n            style: {\r\n              color: \"#000\",\r\n              border: \"1px solid #ffa39e\",\r\n              backgroundColor: \"#ff6961\",\r\n            },\r\n          });\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        notification[\"error\"]({\r\n          message: \"Data Error\",\r\n          description: error,\r\n          style: {\r\n            color: \"#000\",\r\n            border: \"1px solid #ffa39e\",\r\n            backgroundColor: \"#ff6961\",\r\n          },\r\n        });\r\n      });\r\n\r\n\r\n  }, [apiurl]);\r\n \r\n  return (\r\n    <Layout style={{ minHeight: \"100vh\" }}>\r\n      <SIDERVIEW />\r\n      <Layout className=\"site-layout\">\r\n        <HEADERVIEW />\r\n        <Content style={{ margin: \"0 16px\" }}>\r\n          <Breadcrumb style={{ margin: \"16px 0\" }}>\r\n            <Breadcrumb.Item>\r\n              <Link to=\"/allprojects\">Daily Tasks</Link>\r\n            </Breadcrumb.Item>\r\n          </Breadcrumb>\r\n          <div\r\n            className=\"site-layout-background\"\r\n            style={{ padding: 24, minHeight: 360 }}\r\n          >\r\n            <Row>\r\n              <Col span={24}>\r\n              <Typography.Text style={{ color: \"blue\" }}>\r\n                  Target Date :\r\n                </Typography.Text>\r\n                <br />\r\n                <DatePicker value={moment(caldate, dateFormat)} format={dateFormat} onChange={onChangeDate} size=\"medium\" />\r\n              </Col>\r\n            </Row>\r\n          </div>\r\n        </Content>\r\n        <FOOTERVIEW />\r\n      </Layout>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default Index;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { store } from './app/store';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router,Switch,Route,Redirect } from \"react-router-dom\";\n\nimport Log from './components/Auth/login';\nimport Dashboard from './components/layout/dash';\n\n//Projects Views\nimport Newprojects from './components/projects/newproject';\nimport Allprojects from './components/projects/projectslist';\nimport Editproject from './components/projects/editproject';\nimport ProjectView1 from './components/projects/projectview1';\nimport ProjectView2 from './components/projects/projectview2';\n\n//Employee Views\nimport Newemployee from './components/employee/newemployee';\nimport Allemployee from './components/employee/employeelist';\nimport Editemployee from './components/employee/editemployee';\n\n//Calendar Views\nimport AddCalendar from './components/calendar/calendaradd';\nimport Calendarfullview from './components/calendar/calendarfullview';\n\n//Task Views\nimport DailyTasks from './components/tasks/dailytasks';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <Router>\n      <Switch>\n          <Route exact path=\"/\">\n            <Redirect to=\"/login\" />\n          </Route>\n          <Route path=\"/login\">\n            <Log />\n          </Route>\n          <Route path=\"/dashboard\">\n            <Dashboard />\n          </Route>\n          <Route path=\"/newproject\">\n            <Newprojects />\n          </Route>\n          <Route path=\"/allprojects\">\n            <Allprojects />\n          </Route>\n          <Route path=\"/editproject/:id\">\n            <Editproject />\n          </Route>\n          <Route path=\"/projectview1\">\n            <ProjectView1 />\n          </Route>\n          <Route path=\"/projectview2\">\n            <ProjectView2 />\n          </Route>\n          <Route path=\"/newemployee\">\n            <Newemployee />\n          </Route>\n          <Route path=\"/allemployee\">\n            <Allemployee />\n          </Route>\n          <Route path=\"/editemployee/:id\">\n            <Editemployee />\n          </Route>\n          <Route path=\"/addcalendar\">\n            <AddCalendar />\n          </Route>\n          <Route path=\"/calendarfullview\">\n            <Calendarfullview />\n          </Route>\n          <Route path=\"/dailytasks\">\n            <DailyTasks />\n          </Route>\n        </Switch>\n      </Router>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}